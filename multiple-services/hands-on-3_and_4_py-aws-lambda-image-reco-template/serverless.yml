service: awstacktraining-reco 

custom:
  stage: ${opt:stage, self:provider.stage}
  # Topic to notify when image is analysed
  snsTopicName: ${self:service}-${self:custom.stage}-serverless-reco-results
  snsTopicArn:
    {
      "Fn::Join":
        [
          "",
          [
            "arn:aws:sns:${self:provider.region}:",
            { "Ref": "AWS::AccountId" },
            ":${self:custom.snsTopicName}",
          ],
        ],
    }

provider:
  name: aws
  # Python 3.6 (not 3.7) required for ML model execution
  runtime: python3.6
  stage: dev
  region: eu-west-1
  memorySize: 512
  timeout: 10

  # WARNING: this is a very permissive policy
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "lambda:GetLayerVersion"
        - "lambda:GetLayerVersionPolicy"
        - "s3:*"
        - "sns:*"
        - "dynamodb:*"
      Resource: "*"

functions:
  py-aws-lambda-image-reco:
    handler: lambda_function.lambda_handler
    layers:
      # Tensorflow-Kera-Pillow layer
      #   original layer from the tutorial (us-east-1) with arn:aws:lambda:us-east-1:347034527139:layer:tf_keras_pillow:3
      #   adapted to eu-west-1 (courtesy of https://github.com/antonpaquin/Tensorflow-Lambda-Layer)
      - arn:aws:lambda:eu-west-1:347034527139:layer:tf_keras_pillow:1
    events:
      - s3:
          # bucket: dev-uploads-bucket-longname
          bucket: 
            Fn::ImportValue: '${self:custom.stage}-UploadBucketName'
          event: s3:ObjectCreated:*
          # Thanks to https://github.com/serverless/serverless/pull/6290 we can now address existing bucket natively
          existing: true
          events:
            - s3:ObjectCreated:*
    environment:
      snsTopicArn: ${self:custom.snsTopicArn}

resources:
  Resources:
    RecoDoneSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:custom.snsTopicName}
        TopicName: ${self:custom.snsTopicName}
  Outputs:
    RecoDoneSNSTopicName:
      Description: SNS topic to notify when picture is treated
      Value:
        Fn::GetAtt:
          - RecoDoneSNSTopic
          - TopicName
      Export:
        Name: ${self:custom.stage}-RecoDoneSNSTopicName
    RecoDoneSNSTopicArn:
      Description: ARN of the SNS topic to notify when picture is treated
      Value: ${self:custom.snsTopicArn}
      Export:
        Name: ${self:custom.stage}-RecoDoneSNSTopicArn
